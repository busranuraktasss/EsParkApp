@{
    ViewData["Title"] = "E-Arşiv Kontrolü";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="px-5 py-5">
    <div class="px-5 py-5">
        <div class="px-5 py-5 card-body">
            <div class="card">
                <div class="card-header">
                    <h3 class="page-title pt-1 text-start">E-ARŞİV KONTROL</h3>
                </div>
            </div>
            <div class="card">
                <div class="card-header">
                    <div class="mb-3 row">
                        <div class="col-4 ">
                            <div class=" align-self-center my-2 mx-2" style="width:90%">
                                <label class=" form-label text-start" for="date1"><b>BAŞLANGIÇ TARİHİ</b></label>
                                <div class=" ">
                                    <input class="form-control" type="date" value="date" id="date1" name="date1" />

                                </div>
                            </div>
                            <div class=" align-self-center my-2 mx-2" style="width:90%">
                                <label class="form-label text-start" for="date2"><b>BİTİŞ TARİHİ</b></label>
                                <div class=" my-2">
                                    <input class="form-control" type="date" value="date" id="date2" name="date2" />
                                </div>
                            </div>
                        </div>
                        <div class="col-5  align-items-center align-content-center " style="border:5px solid #ffb822">
                            <div class="form-check form-check-inline col-5" style="padding-top:12%; padding-left:12%">
                                <input class="form-check-input" type="radio" name="fatura" id="kesilenFaturalar" />
                                <label class="form-check-label" style="font:15px bold;" for="kesilenFaturalar">KESİLEN FATURALAR</label>
                            </div>
                            <div class="form-check form-check-inline col-5" style="padding-left:9%">
                                <input class="form-check-input" type="radio" name="fatura" id="faturasizKayitlar" />
                                <label class="form-check-label" style="font:15px bold;" for="faturasizKayitlar">FATURASIZ KAYITLAR</label>
                            </div>
                        </div>
                        <div class="col-3" style="padding-left:3%">
                            <button class="btn btn-outline-dark my-2 text-center" style="height:90%; width:90%; " onclick="javascript:getSelectInvoice();"><i class="fa-lg fab fa-searchengin"></i>SORGULA</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid mt-5">
                <div class="row mt-5">
                    <div class="col-12 ">
                        <div class="card">
                            <div class="table-responsive p-2">
                                <table id="arsiv_table" class="table table-striped table-bordered dt-responsive nowrap" style="vertical-align:middle; width:100%; display:none;">
                                    <thead>
                                        <tr>
                                            <th></th>@*Checkbox*@
                                            <th>FATURA NO</th>
                                            <th>FATURA TARİHİ</th>
                                            <th>ARAÇ PLKASI</th>
                                            <th>HİZMET TİPİ</th>
                                            <th>BİRİM FİYAT</th>
                                            <th>KDV TUTARI</th>
                                            <th>TOPLAM TUTAR</th>
                                            <th>ÖDEME TİPİ</th>
                                            <th>ETTN NO</th>
                                            <th>İPTAL</th>@*İPTAL*@
                                            <th>İPTAL TARİHİ</th>
                                            <th>LOKASYON</th>
                                            <th>KULLANICI ADI</th>
                                            <th>CİHAZ SERİ NO</th>
                                        </tr>
                                    </thead>
                                    <tfoot>
                                        <tr>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>₺ <b id="totalA"></b></th>
                                            <th>₺ <b id="totalV"></b></th>
                                            <th>₺ <b id="totalS"></b></th>
                                            <th colspan="3">&nbsp;</th>
                                            <th colspan="3">&nbsp;</th>
                                            <th colspan="2">&nbsp;</th>
                                        </tr>
                                    </tfoot>

                                </table>
                            </div>
                        </div>
                        <div class="card-body">
                        </div>
                    </div>
                </div>
            </div>
            <div class="container-fluid mt-5">
                <div class="row mt-5">
                    <div class="col-12 ">
                        <div class="card">
                            <div class="table-responsive p-2">
                                <table id="arsiv2_table" class="table table-striped table-bordered dt-responsive nowrap" style="vertical-align:middle; width:100%; display:none;">
                                    <thead>
                                        <tr>
                                            <th></th>@*Checkbox*@
                                            <th>KAYIT NO</th>
                                            <th>ARAÇ PLKASI</th>
                                            <th>TARİH</th>
                                            <th>VARDİYA NO</th>
                                            <th>KULLANICI</th>
                                            <th>TİP</th>
                                            <th>ÜCRET</th>
                                        </tr>
                                    </thead>
                                    <tfoot>
                                        <tr>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>&nbsp;</th>
                                            <th>₺ <b id="totalAmount"></b></th>

                                        </tr>
                                    </tfoot>
                                </table>

                            </div>
                        </div>
                        <div class="card-body">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">

        var arsivTablo = null;
        var arsiv2Table = null;

        $((_$) => {
            getDate();
        });


        var getDate = () => {
            var today = new Date();

            document.getElementById("date1").value = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
            document.getElementById("date2").value = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);

        }

        var getSelectInvoice = () => {

            if ($('#kesilenFaturalar').prop('checked')) {
                javascript: getShowEArchieveAjax();
            }
            else if ($('#faturasizKayitlar').prop('checked')) {
                javascript: getShowEArchieve2Ajax();

            }
            else {
                Swal.fire({
                    icon: 'error',
                    text: 'Lütfen hangi verilere ulaşmak istediğinizi seçiniz!'
                });
            }
        }


        var getShowEArchieveAjax = () => {

            if (arsivTablo != null) {
                arsivTablo.destroy();
                arsivTablo = null;
            }

            $('#arsiv_table').css('display', 'block');

            var dateStart = document.getElementById("date1").value;
            var dateEnd = document.getElementById("date2").value;


            if (arsivTablo == null) {
                console.log(arsivTablo);
                arsivTablo = $('#arsiv_table').DataTable({
                    language: { url: '../dil.json' },
                    processing: true,
                    serverSide: true,
                    paging: true,
                    filter: true,
                    orderMulti: true,
                    order: [[0, "asc"]],
                    ajax: {
                        url: '@Url.Action("ShowEArchieve", "EArchieve")',
                        type: "POST",
                        datatype: "json",
                        data: function (d) {
                            d.dateStart = dateStart;
                            d.dateEnd = dateEnd;
                        }
                    },
                    createdRow: function (row, data, dataIndex) {

                    },
                    columnDefs: [],
                    columns: [
                        {
                            "render": (data, type, row) => {

                                return `<div class="form-check form-check-inline"><input class="form-check-input debts" id="${row.invoiceId}" type="checkbox"></div>`;
                            }, "name": "invoiceId"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.invoiceNumber;
                            }, "name": "invoiceNumber"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.invoiceTime;
                            }, "name": "invoiceTime"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.licensePlate;
                            }, "name": "licensePlate"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.invoiceInfo;
                            }, "name": "invoiceInfo"
                        },
                        { "render": (data, type, row) => { if (row.totalAmount == null) return parseFloat(row.totalAmount).toFixed(2); else return '₺ ' + parseFloat(row.totalAmount).toFixed(2); }, "name": "totalAmount" },
                        { "render": (data, type, row) => { if (row.totalVat == null) return parseFloat(row.totalVat).toFixed(2); else return '₺ ' + parseFloat(row.totalVat).toFixed(2); }, "name": "totalVat" },
                        { "render": (data, type, row) => { if (row.totalSum == null) return parseFloat(row.totalSum).toFixed(2); else return '₺ ' + parseFloat(row.totalSum).toFixed(2); }, "name": "totalSum" },
                        {
                            "render": (data, type, row) => {
                                let checkCcart = row.cCart == true ? 'K.KARTI' : 'NAKİT';
                                return checkCcart;
                            }, "name": "checkCcart"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.ettn;
                            }, "name": "ettn"
                        },
                        {
                            "render": (data, type, row) => {
                                let checkCancel = row.Cancel == true ? 'checked' : 'nchecked';
                                return `<div class="form-check form-check-inline">
                                                                                                                               <input class="form-check-input debts" id="${row.invoiceId}" type="checkbox" ${checkCancel}>
                                                                                                                   </div>`;
                            }, "name": "checkCancel"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.cancelTime;
                            }, "name": "cancelTime"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.locId;
                            }, "name": "locId"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.rowId;
                            }, "name": "rowId"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.deviceId;
                            }, "name": "deviceId"
                        },
                    ],
                    footerCallback: function (row, data, start, end, display) {

                        let TotalAmount = 0;
                        data.forEach(element => {
                            TotalAmount += element.totalAmount;
                        })

                        let TotalVat = 0;
                        data.forEach(element => {
                            TotalVat += element.totalVat;

                        })
                        let TotalSum = 0;
                        data.forEach(element => {
                            TotalSum += element.totalSum;
                        })
                        var totalAmount = parseFloat(TotalAmount).toFixed(2);
                        var totalVat = parseFloat(TotalVat).toFixed(2);
                        var totalSum = parseFloat(TotalSum).toFixed(2);

                        $('#totalA').html(totalAmount);
                        $('#totalV').html(totalVat);
                        $('#totalS').html(totalSum);

                    },
                    fixedColumns: true,
                    scrollCollapse: true,
                    dom: 'Bfrtip',
                    buttons: [
                        {
                            extend: 'copy',
                            className: 'btn blue',
                            text: '<i class="far fa-copy"></i> Kopyala',
                        },
                        {
                            extend: 'excel',
                            className: 'btn green',
                            text: '<i class="far fa-file-excel"></i> Excel',
                        },
                        {
                            extend: 'pdf',
                            className: 'btn red',
                            text: '<i class="far fa-file-pdf"></i> PDF'
                        },
                        //{
                        //    text: 'Reload',
                        //    action: function (e, dt, node, config) {
                        //        dt.ajax.reload();
                        //    }
                        //}

                    ],
                    initComplete: function (settings, json) {
                        $('#arsiv_table_filter input').unbind();
                        $('#arsiv_table_filter input').bind('keyup', function (e) {
                            if (e.keyCode == 13) {
                                arsivTablo.search(this.value).draw();
                            }
                        });

                        $('.dataTables_scrollBody').removeAttr('style').css({
                            'position': 'relative',
                            'overflow-y': 'auto',
                            'overflow-x': 'hidden',
                            'width': '100%',
                            'max-height': ((window.innerHeight / 2) + 120) + 'px'
                        });
                    }
                })
            } else arsivTablo.ajax.reload();
        }

        var getShowEArchieve2Ajax = () => {
            if (arsiv2Table != null) {
                arsiv2Table.destroy();
                arsiv2Table = null;
            }

            $('#arsiv2_table').css('display', 'block');

            var dateStart = document.getElementById("date1").value;
            var dateEnd = document.getElementById("date2").value;



            if (arsiv2Table == null) {
                arsiv2Table = $('#arsiv2_table').DataTable({
                    language: { url: '../dil.json' },
                    processing: true,
                    serverSide: true,
                    paging: true,
                    filter: true,
                    orderMulti: true,
                    order: [[0, "asc"]],
                    ajax: {
                        url: '@Url.Action("ShowEArchieve2", "EArchieve")',
                        type: "POST",
                        datatype: "json",
                        data: function (d) {
                            d.dateStart = dateStart;
                            d.dateEnd = dateEnd;
                        }
                    },
                    createdRow: function (row, data, dataIndex) {

                    },
                    columnDefs: [],
                    columns: [
                        {
                            "render": (data, type, row) => {

                                return `<div class="form-check form-check-inline"><input class="form-check-input debts" id="${row.parkingId}" type="checkbox"></div>`;
                            }, "name": "parkingId"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.parkingId;
                            }, "name": "parkingId"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.licensePlate;
                            }, "name": "licensePlate"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.startDate;
                            }, "name": "startDate"
                        },
                        {
                            "render": (data, type, row) => {
                                return row.jobRotationHistoryId;
                            }, "name": "jobRotationHistoryId"
                        },
                        {
                            "render": (data, type, row) => {
                                return rowId;
                            }, "name": "rowId"
                        },
                        {
                            "render": (data, type, row) => {
                                return type;
                            }, "name": "type"
                        },
                        {
                            "render": (data, type, row) => {
                                return parseFloat(row.parkingFeeForoverTime).toFixed(2);
                            }, "name": "parkingFeeForoverTime"
                        },
                    ],
                    footerCallback: function (row, data, start, end, display) {

                        let TotalAmount = 0;
                        data.forEach(element => {
                            TotalAmount += element.totalAmount;
                        })


                        var totalAmount = parseFloat(TotalAmount).toFixed(2);
                        $('#totalAmount').html(totalAmount);


                    },
                    fixedColumns: true,
                    scrollCollapse: true,
                    initComplete: function (settings, json) {
                        $('#arsiv2_table_filter input').unbind();
                        $('#arsiv2_table_filter input').bind('keyup', function (e) {
                            if (e.keyCode == 13) {
                                arsivTablo.search(this.value).draw();
                            }
                        });

                        $('.dataTables_scrollBody').removeAttr('style').css({
                            'position': 'relative',
                            'overflow-y': 'auto',
                            'overflow-x': 'hidden',
                            'width': '100%',
                            'max-height': ((window.innerHeight / 2) + 120) + 'px'
                        });
                    }
                })
            } else arsiv2Table.ajax.reload();
        }

    </script>

 }