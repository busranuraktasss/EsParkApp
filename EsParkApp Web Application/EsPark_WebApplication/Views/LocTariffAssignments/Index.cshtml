@{
    ViewData["Title"] = "Lokasyon Tarife Atamaları";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="px-5 pt-5">
    <div class="px-5 pt-5">
        <div class="px-5 pt-5 row col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="page-title col-sm-10 pt-1 text-start">Lokasyon Tarife Atamaları</h3>
                </div>
            </div>
        </div>
    </div>
</div><!--Header-->

<div class="px-5">
    <div class="px-5">
        <div class="px-5 row">
            <div class="col-6">
                <div class="page-content">
                    <div class="card">
                        <div class="card-header  ">
                            <div class="row text-center">
                                <h3 class="page-title col-sm-9 text-start">Lokasyonlar</h3>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="table-responsive p-2">
                            <table id="loc_table" class="table table-striped table-bordered dt-responsive nowrap table-hover" style="vertical-align:middle; width:100%;">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Lokasyon Adı</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    <div class="card-body">
                    </div>
                </div>
            </div><!--end Location Table-->
            <div class="col-6">
                <div class="page-content">
                    <div class="card">
                        <div class="card-header">
                            <div class="row text-center">
                                <h3 class="page-title col-sm-12 text-start">Tarifeler</h3>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="table-responsive p-2">
                            <table id="parkTariff_table" class="table table-striped table-bordered dt-responsive nowrap" style="vertical-align:middle; width:100%;">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Tarife Adı</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    <div class="card-body">
                    </div>

                </div>
            </div><!--end ParkTariff Table-->
        </div>
    </div>
</div><!--end Location and ParkTariff Tables-->

<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title m-0" id="staticBackdropLabel3">Tarife Ekle</h6>
                <button type="button" class="btn-close" onclick="" data-bs-dismiss="modal" aria-label="Close"></button>
            </div><!--end modal-header-->
            <div class="modal-body">
                <form id="update-form">
                    <input type="hidden" value="0" id="updateId" name="updateId" />

                    <div class="mb-3 row">
                        <label class="col-sm-3 form-label text-start" for="Dropdown1"><b>Lokasyon </b><span class="text-danger">*</span></label>
                        <select class="col-md-9 dropdown-control" id="locDropdown1" name="locId"></select>
                    </div>

                    <div class="mb-3 row">
                        <label class="col-sm-3 form-label text-start" for="Dropdown2"><b>Tarife </b><span class="text-danger">*</span></label>
                        <select class="col-md-9 dropdown-control" id="tariffDropdown2" name="plateId"></select>
                    </div>
                </form>
            </div><!--end modal body-->
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-sm" onclick="javascript:addParkTariff();">TAMAM</button>
                <button type="button" class="btn btn-primary btn-sm" data-bs-dismiss="modal">Vazgec</button>
            </div>
        </div>
    </div>
</div><!--end LocTariffAssignment's Modal-->
@section scripts {
    <script type="text/javascript">

        var locationTablo = null;
        var parkTariffTablo = null;

        $((_$) => {
            getLocTariffAssignmentsAjax();
            showParkTariff(sessionStorage.getItem('selectId') || 0);

            getDropdown1();
            getDropdown2();
        });

        var getLocTariffAssignmentsAjax = () => {
            if (locationTablo == null)
                locationTablo = $('#loc_table').DataTable({
                    language: { url: '../dil.json' },
                    processing: true,
                    serverSide: true,
                    paging: true,
                    filter: true,
                    orderMulti: true,
                    order: [[1, 'asc']],
                    ajax: {
                        url: '@Url.Action("ShowLocations", "LocTariffAssignments")',
                        type: "POST",
                        datatype: "json"
                    },
                    createdRow: function (row, data, dataIndex) {

                    },
                    columnDefs: [],
                    columns: [
                        {
                            "render": (data, type, row) => {
                                return row.plateId;
                            }, "name": "plateId"

                        },
                        {
                            "render": (data, type, row) => {
                                return row.LocId;
                            }, "name": "LocId"
                        },
                        {
                            "render": function (data, type, row) {
                                return `<button type="button" id="add" class="btn btn-outline-dark pt-2" onclick="javascript:getsetModal(${row.plateId})"><i class="mdi mdi-map-marker-plus"></i></button>`;
                            }, "name": "LocTariffAssignId", "name": "LocTariffAssignId", "name": "LocTariffAssignId"
                        },
                    ],
                    fixedColumns: true,
                    scrollCollapse: true,
                    initComplete: function (settings, json) {
                        $('#loc_table input').unbind();
                        $('#loc_table input').bind('keyup', function (e) {
                            if (e.keyCode == 13) {
                                locationTablo.search(this.value).draw();
                            }
                        });

                        $('.dataTables_scrollBody').removeAttr('style').css({
                            'position': 'relative',
                            'overflow-y': 'auto',
                            'overflow-x': 'hidden',
                            'width': '100%',
                            'max-height': ((window.innerHeight / 2) + 120) + 'px'
                        });
                    }
                })

            //Seçili satırın tarifelerini göster
            var table1 = $('#loc_table').DataTable();

            $('#loc_table tbody').on('click', 'tr', function () {
                var data = table1.row(this).data();
                javascript: showParkTariff(data.plateId);

                $('#loc_table tbody tr').css("background-color", "#ffffff");
                $('#loc_table tbody tr').css("color", "#000000");


                $(this).css("background-color", "#ffb822");
                $(this).css("color", "#ffffff");

            });

        }

        var showParkTariff = (_sID) => {
            sessionStorage.setItem('selectId', _sID);

            if (parkTariffTablo == null)
                parkTariffTablo = $('#parkTariff_table').DataTable({
                    language: { url: '../dil.json' },
                    processing: true,
                    serverSide: true,
                    paging: true,
                    filter: true,
                    orderMulti: true,
                    order: [[1, 'asc']],
                    ajax: {
                        url: '@Url.Action("ShowParkTariff", "LocTariffAssignments")',
                        type: "POST",
                        datatype: "json",
                        data: function (d) {
                            d.sId = sessionStorage.getItem('selectId');
                        }
                    },
                    createdRow: function (row, data, dataIndex) {

                    },
                    columnDefs: [],
                    columns: [
                        {
                            "render": (data, type, row) => {
                                return row.LocTariffAssignId;
                            }, "name": "LocTariffAssignId"

                        },
                        {
                            "render": (data, type, row) => {
                                return row.TariffId;
                            }, "name": "TariffId"
                        },
                        {
                            "render": function (data, type, row) {
                                return `<button type="button" id="delete" class="btn btn btn-outline-dark pt-2" onclick="javascript:deleteTariff(${row.LocTariffAssignId})"><i class="mdi mdi-trash-can-outline""></i></button>`;

                            }, "name": "LocTariffAssignId", "name": "LocTariffAssignId"
                        },
                    ],
                    fixedColumns: true,
                    scrollCollapse: true,
                    initComplete: function (settings, json) {
                        $('#parkTariff_table input').unbind();
                        $('#parkTariff_table input').bind('keyup', function (e) {
                            if (e.keyCode == 13) {
                                parkTariffTablo.search(this.value).draw();
                            }
                        });

                        $('.dataTables_scrollBody').removeAttr('style').css({
                            'position': 'relative',
                            'overflow-y': 'auto',
                            'overflow-x': 'hidden',
                            'width': '100%',
                            'max-height': ((window.innerHeight / 2) + 120) + 'px'
                        });
                    }
                })
            else parkTariffTablo.ajax.reload();
        }

        var deleteLocation = (delId) => {
            Swal.fire({
                title: 'Silmek istediğinize emin misiniz?',
                icon: 'question',
                showCancelButton: true,
                cancelButtonText: 'Hayır',
                confirmButtonColor: '#4a804d',
                cancelButtonColor: '#b22222',
                confirmButtonText: 'Evet'
            })
                .then((result) => {

                    if (result.value == true) {
                        $.getJSON('@Url.Action("DeleteLocation","LocTariffAssignments")', { pr: delId }, (d, s) => {
                            if (s === "success") {

                                if (d.Status == true) {

                                    locationTablo.ajax.reload();
                                    Swal.fire({ title: 'Silme işlemi gerçekleşti.', confirmButtonColor: '#1c6071', confirmButtonText: 'Tamam' });
                                }
                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Silme işlemi gerçekleşemedi.'
                                    });
                                }

                            }
                            if (locationTablo != null)
                                locationTablo.ajax.reload();
                        });
                    }
                });
        }

        var getsetModal = (selectId) => {
            $('#updateId').val("");
            $.getJSON('@Url.Action("GetParkTariff", "LocTariffAssignments")', { sId: selectId }, (d, s) => {

                if (s === 'success') {

                    $('#staticBackdrop').modal('show');
                    $('#updateId').val(d.data.LOCID);

                    $('#locDropdown1').val(d.data.LOCID);

                }
            })
        }

        var getDropdown1 = () => {
            $(document).ready(function () {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("Dropdown1", "LocTariffAssignments")',
                    data: "json",
                    success: function (data) {

                        var s = '<option value="-1">Lütfen Lokasyon Seçiniz...</option>';
                        for (var i = 0; i < data.data.length; i++) {

                            s += '<option value="' + data.data[i].LocTariffAssignId + '">' + data.data[i].LocId + '</option>';
                        }
                        $("#locDropdown1").html(s);
                    }
                });
            });
        }

        var getDropdown2 = () => {
            $(document).ready(function () {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("Dropdown2", "LocTariffAssignments")',
                    data: "json",
                    success: function (data) {

                        var s = '<option value="-1">Lütfen Tarife Seçiniz...</option>';
                        for (var i = 0; i < data.data.length; i++) {

                            s += '<option value="' + data.data[i].LocTariffAssignId + '">' + data.data[i].TariffId + '</option>';

                        }
                        $("#tariffDropdown2").html(s);
                    }
                });
            });
        }

        var addParkTariff = () => {

            var LokasyonControl = $('[name = "LocId"]').val();
            var TarifeControl = $('[name = "plateId"]').val();


            var formData = new FormData(document.getElementById("update-form"));

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddParkTariff","LocTariffAssignments")',
                data: formData,
                async: true,
                contentType: false,
                processData: false,
                success: data => {

                    if (data.Status == true) {
                        const Toast = Swal.mixin({
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 2000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })
                        if (parkTariffTablo != null)
                            parkTariffTablo.ajax.reload();

                        Toast.fire({
                            ion: 'success',
                            title: 'Ekleme işlemi başarıyla gerçekleşti.'
                        })
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Ekleme işlemi gerçekleşemedi.'
                        });
                    }
                },
            });

            $('#staticBackdrop').modal('hide');

        }

        var deleteTariff = (delId) => {
            Swal.fire({
                title: 'Silmek istediğinize emin misiniz?',
                icon: 'question',
                showCancelButton: true,
                cancelButtonText: 'Hayır',
                confirmButtonColor: '#4a804d',
                cancelButtonColor: '#b22222',
                confirmButtonText: 'Evet'
            })
                .then((result) => {

                    if (result.value == true) {
                        $.getJSON('@Url.Action("DeleteTariff","LocTariffAssignments")', { pr: delId }, (d, s) => {
                            if (s === "success") {

                                if (d.Status == true) {

                                    parkTariffTablo.ajax.reload();
                                    Swal.fire({ title: 'Silme işlemi gerçekleşti.', confirmButtonColor: '#1c6071', confirmButtonText: 'Tamam' });
                                }
                                else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Silme işlemi gerçekleşemedi.'
                                    });
                                }

                            }
                            if (parkTariffTablo != null)
                                parkTariffTablo.ajax.reload();
                        });
                    }
                });
        }

    </script>

}